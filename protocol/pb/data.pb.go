// Code generated by protoc-gen-go. DO NOT EDIT.
// source: data.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type XlsData struct {
	Info                 *DataInfo  `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Data                 []*RowData `protobuf:"bytes,7,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *XlsData) Reset()         { *m = XlsData{} }
func (m *XlsData) String() string { return proto.CompactTextString(m) }
func (*XlsData) ProtoMessage()    {}
func (*XlsData) Descriptor() ([]byte, []int) {
	return fileDescriptor_871986018790d2fd, []int{0}
}

func (m *XlsData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XlsData.Unmarshal(m, b)
}
func (m *XlsData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XlsData.Marshal(b, m, deterministic)
}
func (m *XlsData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XlsData.Merge(m, src)
}
func (m *XlsData) XXX_Size() int {
	return xxx_messageInfo_XlsData.Size(m)
}
func (m *XlsData) XXX_DiscardUnknown() {
	xxx_messageInfo_XlsData.DiscardUnknown(m)
}

var xxx_messageInfo_XlsData proto.InternalMessageInfo

func (m *XlsData) GetInfo() *DataInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *XlsData) GetData() []*RowData {
	if m != nil {
		return m.Data
	}
	return nil
}

// DataInfo 表格的相关信息
type DataInfo struct {
	Project              string   `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	Branch               string   `protobuf:"bytes,2,opt,name=branch,proto3" json:"branch,omitempty"`
	XlsFileName          string   `protobuf:"bytes,3,opt,name=xls_file_name,json=xlsFileName,proto3" json:"xls_file_name,omitempty"`
	XlsSheetName         string   `protobuf:"bytes,4,opt,name=xls_sheet_name,json=xlsSheetName,proto3" json:"xls_sheet_name,omitempty"`
	IdRowIdx             int32    `protobuf:"varint,5,opt,name=id_row_idx,json=idRowIdx,proto3" json:"id_row_idx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataInfo) Reset()         { *m = DataInfo{} }
func (m *DataInfo) String() string { return proto.CompactTextString(m) }
func (*DataInfo) ProtoMessage()    {}
func (*DataInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_871986018790d2fd, []int{1}
}

func (m *DataInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataInfo.Unmarshal(m, b)
}
func (m *DataInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataInfo.Marshal(b, m, deterministic)
}
func (m *DataInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataInfo.Merge(m, src)
}
func (m *DataInfo) XXX_Size() int {
	return xxx_messageInfo_DataInfo.Size(m)
}
func (m *DataInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DataInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DataInfo proto.InternalMessageInfo

func (m *DataInfo) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *DataInfo) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *DataInfo) GetXlsFileName() string {
	if m != nil {
		return m.XlsFileName
	}
	return ""
}

func (m *DataInfo) GetXlsSheetName() string {
	if m != nil {
		return m.XlsSheetName
	}
	return ""
}

func (m *DataInfo) GetIdRowIdx() int32 {
	if m != nil {
		return m.IdRowIdx
	}
	return 0
}

// RowData 单行数据
type RowData struct {
	Data                 []*CellData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RowData) Reset()         { *m = RowData{} }
func (m *RowData) String() string { return proto.CompactTextString(m) }
func (*RowData) ProtoMessage()    {}
func (*RowData) Descriptor() ([]byte, []int) {
	return fileDescriptor_871986018790d2fd, []int{2}
}

func (m *RowData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RowData.Unmarshal(m, b)
}
func (m *RowData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RowData.Marshal(b, m, deterministic)
}
func (m *RowData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RowData.Merge(m, src)
}
func (m *RowData) XXX_Size() int {
	return xxx_messageInfo_RowData.Size(m)
}
func (m *RowData) XXX_DiscardUnknown() {
	xxx_messageInfo_RowData.DiscardUnknown(m)
}

var xxx_messageInfo_RowData proto.InternalMessageInfo

func (m *RowData) GetData() []*CellData {
	if m != nil {
		return m.Data
	}
	return nil
}

// CellData 单个单元格数据
type CellData struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IdIdx                int32    `protobuf:"varint,2,opt,name=id_idx,json=idIdx,proto3" json:"id_idx,omitempty"`
	Content              string   `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CellData) Reset()         { *m = CellData{} }
func (m *CellData) String() string { return proto.CompactTextString(m) }
func (*CellData) ProtoMessage()    {}
func (*CellData) Descriptor() ([]byte, []int) {
	return fileDescriptor_871986018790d2fd, []int{3}
}

func (m *CellData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellData.Unmarshal(m, b)
}
func (m *CellData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellData.Marshal(b, m, deterministic)
}
func (m *CellData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellData.Merge(m, src)
}
func (m *CellData) XXX_Size() int {
	return xxx_messageInfo_CellData.Size(m)
}
func (m *CellData) XXX_DiscardUnknown() {
	xxx_messageInfo_CellData.DiscardUnknown(m)
}

var xxx_messageInfo_CellData proto.InternalMessageInfo

func (m *CellData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CellData) GetIdIdx() int32 {
	if m != nil {
		return m.IdIdx
	}
	return 0
}

func (m *CellData) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type GetXDataReq struct {
	Info                 *DataInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetXDataReq) Reset()         { *m = GetXDataReq{} }
func (m *GetXDataReq) String() string { return proto.CompactTextString(m) }
func (*GetXDataReq) ProtoMessage()    {}
func (*GetXDataReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_871986018790d2fd, []int{4}
}

func (m *GetXDataReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetXDataReq.Unmarshal(m, b)
}
func (m *GetXDataReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetXDataReq.Marshal(b, m, deterministic)
}
func (m *GetXDataReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetXDataReq.Merge(m, src)
}
func (m *GetXDataReq) XXX_Size() int {
	return xxx_messageInfo_GetXDataReq.Size(m)
}
func (m *GetXDataReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetXDataReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetXDataReq proto.InternalMessageInfo

func (m *GetXDataReq) GetInfo() *DataInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type GetXDataResp struct {
	Data                 *XlsData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetXDataResp) Reset()         { *m = GetXDataResp{} }
func (m *GetXDataResp) String() string { return proto.CompactTextString(m) }
func (*GetXDataResp) ProtoMessage()    {}
func (*GetXDataResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_871986018790d2fd, []int{5}
}

func (m *GetXDataResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetXDataResp.Unmarshal(m, b)
}
func (m *GetXDataResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetXDataResp.Marshal(b, m, deterministic)
}
func (m *GetXDataResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetXDataResp.Merge(m, src)
}
func (m *GetXDataResp) XXX_Size() int {
	return xxx_messageInfo_GetXDataResp.Size(m)
}
func (m *GetXDataResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetXDataResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetXDataResp proto.InternalMessageInfo

func (m *GetXDataResp) GetData() *XlsData {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*XlsData)(nil), "pb.XlsData")
	proto.RegisterType((*DataInfo)(nil), "pb.DataInfo")
	proto.RegisterType((*RowData)(nil), "pb.RowData")
	proto.RegisterType((*CellData)(nil), "pb.CellData")
	proto.RegisterType((*GetXDataReq)(nil), "pb.GetXDataReq")
	proto.RegisterType((*GetXDataResp)(nil), "pb.GetXDataResp")
}

func init() { proto.RegisterFile("data.proto", fileDescriptor_871986018790d2fd) }

var fileDescriptor_871986018790d2fd = []byte{
	// 350 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x4f, 0x4b, 0xf3, 0x40,
	0x10, 0xc6, 0xdf, 0xa4, 0x7f, 0xd2, 0x77, 0x92, 0xb7, 0xaf, 0x2c, 0x28, 0x41, 0x04, 0x43, 0xf0,
	0x50, 0x14, 0x5a, 0xa8, 0x37, 0xaf, 0x8a, 0xa5, 0x28, 0x1e, 0xd2, 0x4b, 0x6f, 0x21, 0xc9, 0x4e,
	0xe9, 0xca, 0x36, 0x1b, 0x93, 0xc5, 0xee, 0x07, 0xf2, 0x83, 0xca, 0x4e, 0x52, 0xad, 0x27, 0x8f,
	0x33, 0xcf, 0xf3, 0xec, 0xcc, 0x2f, 0x13, 0x00, 0x9e, 0xe9, 0x6c, 0x5a, 0xd5, 0x4a, 0x2b, 0xe6,
	0x56, 0x79, 0xfc, 0x0c, 0xde, 0x5a, 0x36, 0x0f, 0x99, 0xce, 0x58, 0x04, 0x7d, 0x51, 0x6e, 0x54,
	0xe8, 0x44, 0xce, 0xc4, 0x9f, 0x07, 0xd3, 0x2a, 0x9f, 0xda, 0xfe, 0xb2, 0xdc, 0xa8, 0x84, 0x14,
	0x76, 0x09, 0x7d, 0x1b, 0x0f, 0xbd, 0xa8, 0x37, 0xf1, 0xe7, 0xbe, 0x75, 0x24, 0x6a, 0x6f, 0x4d,
	0x09, 0x09, 0xf1, 0x87, 0x03, 0xa3, 0x43, 0x86, 0x85, 0xe0, 0x55, 0xb5, 0x7a, 0xc5, 0x42, 0xd3,
	0x93, 0x7f, 0x93, 0x43, 0xc9, 0xce, 0x60, 0x98, 0xd7, 0x59, 0x59, 0x6c, 0x43, 0x97, 0x84, 0xae,
	0x62, 0x31, 0xfc, 0x33, 0xb2, 0x49, 0x37, 0x42, 0x62, 0x5a, 0x66, 0x3b, 0x0c, 0x7b, 0x24, 0xfb,
	0x46, 0x36, 0x8f, 0x42, 0xe2, 0x4b, 0xb6, 0x43, 0x76, 0x05, 0x63, 0xeb, 0x69, 0xb6, 0x88, 0xba,
	0x35, 0xf5, 0xc9, 0x14, 0x18, 0xd9, 0xac, 0x6c, 0x93, 0x5c, 0x17, 0x00, 0x82, 0xa7, 0xb5, 0xda,
	0xa7, 0x82, 0x9b, 0x70, 0x10, 0x39, 0x93, 0x41, 0x32, 0x12, 0x3c, 0x51, 0xfb, 0x25, 0x37, 0xf1,
	0x0d, 0x78, 0xdd, 0xde, 0x16, 0x9a, 0x90, 0x1c, 0x42, 0x22, 0xe8, 0x7b, 0x94, 0xf2, 0x88, 0xe9,
	0x09, 0x46, 0x87, 0x0e, 0x1b, 0x83, 0x2b, 0x78, 0x47, 0xe3, 0x0a, 0xce, 0x4e, 0x61, 0x28, 0x38,
	0x8d, 0x70, 0x69, 0xc4, 0x40, 0xf0, 0x25, 0x37, 0x96, 0xbc, 0x50, 0xa5, 0xc6, 0x52, 0x87, 0x5e,
	0x4b, 0xde, 0x95, 0xf1, 0x0c, 0xfc, 0x05, 0xea, 0x35, 0x3d, 0x8f, 0x6f, 0xbf, 0x7f, 0xf2, 0x78,
	0x06, 0xc1, 0x77, 0xa0, 0xa9, 0xbe, 0x4e, 0xd0, 0x26, 0xe8, 0x04, 0xdd, 0xfd, 0xda, 0x75, 0xe7,
	0x77, 0x10, 0x18, 0x5b, 0xae, 0xb0, 0x7e, 0x17, 0x05, 0xb2, 0x6b, 0xe8, 0x2d, 0x50, 0xb3, 0xff,
	0xd6, 0x79, 0x34, 0xfa, 0xfc, 0xe4, 0x67, 0xa3, 0xa9, 0xe2, 0x3f, 0xf9, 0x90, 0xfe, 0x8b, 0xdb,
	0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x75, 0x6d, 0xf2, 0x34, 0x25, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// XDataServiceClient is the client API for XDataService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type XDataServiceClient interface {
	// 获取
	Get(ctx context.Context, in *GetXDataReq, opts ...grpc.CallOption) (*GetXDataResp, error)
}

type xDataServiceClient struct {
	cc *grpc.ClientConn
}

func NewXDataServiceClient(cc *grpc.ClientConn) XDataServiceClient {
	return &xDataServiceClient{cc}
}

func (c *xDataServiceClient) Get(ctx context.Context, in *GetXDataReq, opts ...grpc.CallOption) (*GetXDataResp, error) {
	out := new(GetXDataResp)
	err := c.cc.Invoke(ctx, "/pb.xDataService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// XDataServiceServer is the server API for XDataService service.
type XDataServiceServer interface {
	// 获取
	Get(context.Context, *GetXDataReq) (*GetXDataResp, error)
}

// UnimplementedXDataServiceServer can be embedded to have forward compatible implementations.
type UnimplementedXDataServiceServer struct {
}

func (*UnimplementedXDataServiceServer) Get(ctx context.Context, req *GetXDataReq) (*GetXDataResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterXDataServiceServer(s *grpc.Server, srv XDataServiceServer) {
	s.RegisterService(&_XDataService_serviceDesc, srv)
}

func _XDataService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetXDataReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XDataServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.xDataService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XDataServiceServer).Get(ctx, req.(*GetXDataReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _XDataService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.xDataService",
	HandlerType: (*XDataServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _XDataService_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "data.proto",
}
